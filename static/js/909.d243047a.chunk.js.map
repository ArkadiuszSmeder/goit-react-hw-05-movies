{"version":3,"file":"static/js/909.d243047a.chunk.js","mappings":"yOAAaA,EAAgB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEjB,iGAAAF,EAAAE,KAAA,EACYC,MADZ,4FACwB,OAArB,IAARJ,EAAQC,EAAAI,MACAC,GAAG,CAADL,EAAAE,KAAA,cACR,IAAII,MAAM,+BAA8B,cAAAN,EAAAO,OAAA,SAEzCR,EAASS,QAAM,wBAAAR,EAAAS,OAAA,GAAAX,EAAA,KACvB,kBAR0B,OAAAH,EAAAe,MAAA,KAAAC,UAAA,K,uCCkC7B,EA7Ba,WACX,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAAkDC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvDI,EAAiBF,EAAA,GAAEG,EAAoBH,EAAA,GAW9C,OATAI,EAAAA,EAAAA,UAAS,CACPC,SAAU,CAAC,kBACXC,QAAS,kBAAM5B,GAAkB,EACjC6B,UAAW,SAACC,GACVL,EAAqBK,EAAcC,SACnCC,QAAQC,IAAIH,EACd,KAIAI,EAAAA,EAAAA,MAAA,QAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,MAAAD,SACGX,EAAkBa,KAAI,SAAAC,GAAI,OACzBF,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,EAAKI,IAAMC,MAAO,CAAEC,KAAM1B,GAAWiB,SACvDG,EAAKO,SAFDP,EAAKI,GAIT,QAKf,C,uBChCA,SAASI,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CACe,SAASjD,EAAkB0D,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAO9C,UACT,OAAO,IAAIyC,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAG5C,MAAM6C,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOa,GACdlB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASa,EACnE,CACAd,OAAMe,EACR,GACF,CACF,C","sources":["utils/getTrendingFilms.js","pages/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const getTrendingFilms = async () => {\n\n    const query = `https://api.themoviedb.org/3/trending/movie/day?api_key=fcef3f7d90b41f3f85ee0cce371ea367`\n    const response = await fetch(query)\n    if (!response.ok) {\n      throw new Error('Network response was not ok')\n    }\n    return response.json()\n  }\n","import React, { useState } from 'react';\nimport { getTrendingFilms } from \"utils/getTrendingFilms\";\nimport { useQuery } from \"react-query\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst Home = () => {\n  const location = useLocation();\n  const [trendingFilmsList, setTrendingFilmsList] = useState([])\n\n  useQuery({\n    queryKey: ['trending-films'],\n    queryFn: () => getTrendingFilms(),\n    onSuccess: (trendingFilms) => {\n      setTrendingFilmsList(trendingFilms.results)\n      console.log(trendingFilms)\n    }\n  });\n\n  return (\n    <main>\n      <h1>Trending Today</h1>\n      <ul>\n        {trendingFilmsList.map(film => (\n          <li key={film.id}>\n            <Link to={`/movies/${film.id}`} state={{ from: location }}>\n              {film.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n};\n\nexport default Home;\n\n\n//================================================================\n// import React from 'react';\n// import { TrendingMoviesList } from 'components/TrendingMoviesList';\n\n\n// const Home = () => {\n\n//   return (\n//     <main>\n//       <h1>Trending Today</h1>\n//       <TrendingMoviesList />\n//     </main>\n//   );\n// };\n\n// export default Home;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["getTrendingFilms","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetch","sent","ok","Error","abrupt","json","stop","apply","arguments","location","useLocation","_useState","useState","_useState2","_slicedToArray","trendingFilmsList","setTrendingFilmsList","useQuery","queryKey","queryFn","onSuccess","trendingFilms","results","console","log","_jsxs","children","_jsx","map","film","Link","to","concat","id","state","from","title","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}